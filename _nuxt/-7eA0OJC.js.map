{"version":3,"file":"-7eA0OJC.js","sources":["../../../../pages/apps/identifiers/index.vue"],"sourcesContent":["<template>\n  <div>\n    <v-h1>Identifiers</v-h1>\n\n    <v-button\n      to=\"/apps/identifiers/manage/new\"\n      variant=\"primary\"\n    >\n      Create new app identifier\n    </v-button>\n\n    <v-info class=\"mt-5\">\n      App identifiers without attached IPA files will be automatically deleted after 30 days of inactivity. Installations are counted not in real time\n      with approximately one hour delay.\n    </v-info>\n\n    <v-info class=\"mt-5\">\n      If your app status is not listed in the Store, you can preview and install your app to one of your\n      <NuxtLink to=\"/developer/test-devices\">Test devices</NuxtLink>.\n    </v-info>\n\n    <v-table\n      class=\"mt-5\"\n      :loading=\"areAppsLoading\"\n    >\n      <template #head>\n        <v-tr>\n          <v-th>Identifier</v-th>\n          <v-th>Label</v-th>\n          <v-th>Icon</v-th>\n          <v-th>Name</v-th>\n          <v-th>Version</v-th>\n          <v-th>Status</v-th>\n          <v-th>Last status validation issue</v-th>\n          <v-th>Installations</v-th>\n          <v-th>Revenue</v-th>\n          <v-th></v-th>\n        </v-tr>\n      </template>\n\n      <template #body>\n        <v-tr\n          v-for=\"app of apps\"\n          :key=\"app.identifier\"\n        >\n          <v-td class=\"break-words\"\n            ><a\n              target=\"_blank\"\n              :href=\"'https://appdb.to/details/' + app.identifier\"\n              >{{ app.identifier }}</a\n            ></v-td\n          >\n          <v-td>{{ app.label }}</v-td>\n          <v-td>\n            <v-image-placeholder\n              :src=\"app.icon_uri\"\n              class=\"h-9 w-9 rounded-md object-cover object-center\"\n            />\n          </v-td>\n          <v-td>{{ app.name }}</v-td>\n          <v-td>{{ app.version }}</v-td>\n          <v-td class=\"break-words\">\n            <v-spinner\n              v-if=\"!app.is_finished\"\n              size=\"1.2em\"\n              class=\"relative top-1 mr-1.5 inline-block\"\n            />\n            <v-html\n              tag=\"span\"\n              :content=\"app.status_translated\"\n            />\n          </v-td>\n          <v-td class=\"whitespace-pre-line break-words\">\n            <v-html :content=\"app.last_status_validation_issue\" />\n          </v-td>\n          <v-td>{{ app.installations }}</v-td>\n          <v-td>{{ (app.revenue * 100).toLocaleString(\"de-DE\", { style: \"currency\", currency: \"EUR\" }) }}</v-td>\n          <v-td>\n            <div class=\"flex flex-col gap-1.5\">\n              <v-button :to=\"`/apps/identifiers/manage/${app.identifier}`\"> Edit </v-button>\n              <v-button\n                variant=\"primary\"\n                :to=\"`/apps/binary-packages/upload/${app.identifier}`\"\n              >\n                Upload IPA package\n              </v-button>\n            </div>\n          </v-td>\n        </v-tr>\n      </template>\n    </v-table>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { App } from \"core/types/api\"\n\nconst areAppsLoading = ref(false)\nconst apps = ref<App[]>([])\nawait loadApps()\n\nasync function loadApps() {\n  areAppsLoading.value = true\n\n  try {\n    // TODO implement cancelable requests\n    apps.value = await getApps()\n\n    const shouldScheduleReload = apps.value.some((app) => !app.is_finished)\n    if (shouldScheduleReload) {\n      setTimeout(loadApps, 5000)\n    }\n  } finally {\n    areAppsLoading.value = false\n  }\n}\n\nconst emitter = useEmitter()\nemitter.on(\"agreementSigned\", loadApps)\n</script>\n"],"names":["areAppsLoading","ref","apps","__temp","__restore","_withAsyncContext","loadApps","getApps","app","useEmitter"],"mappings":"ihBAiGM,MAAAA,EAAiBC,EAAI,EAAK,EAC1BC,EAAOD,EAAW,CAAA,CAAE,EACpB,CAAAE,EAAAC,CAAA,EAAAC,EAAA,IAAAC,EAAA,CAAS,cAEf,eAAeA,GAAW,CACxBN,EAAe,MAAQ,GAEnB,GAAA,CAEGE,EAAA,MAAQ,MAAMK,IAEUL,EAAK,MAAM,KAAMM,GAAQ,CAACA,EAAI,WAAW,GAEpE,WAAWF,EAAU,GAAI,CAC3B,QACA,CACAN,EAAe,MAAQ,EACzB,CACF,CAGQ,OADQS,IACR,GAAG,kBAAmBH,CAAQ"}