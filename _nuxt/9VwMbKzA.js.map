{"version":3,"file":"9VwMbKzA.js","sources":["../../../../../../packages/core/components/v-file.vue","../../../../../../packages/core/utils/calculateUploadProgress.ts"],"sourcesContent":["<template>\n  <div\n    class=\"relative flex flex-col items-center justify-center rounded-md border border-dashed border-gray-200 bg-gray-50 p-4 dark:border-gray-400 dark:bg-gray-600\"\n  >\n    <input\n      ref=\"input\"\n      class=\"absolute -inset-px block cursor-pointer opacity-0\"\n      :class=\"{\n        'pointer-events-none': props.loading,\n      }\"\n      type=\"file\"\n      :multiple=\"props.multiple\"\n      :accept=\"accept\"\n    />\n\n    <Icon\n      class=\"mb-2 text-4xl transition-all\"\n      :class=\"{\n        'opacity-0': props.loading,\n      }\"\n      name=\"tabler:cloud-upload\"\n    />\n\n    <div\n      class=\"max-w-full transition-all\"\n      :class=\"{\n        'opacity-0': props.loading,\n      }\"\n    >\n      <p\n        v-if=\"props.showFileName && hasModelValue\"\n        class=\"overflow-hidden text-ellipsis whitespace-nowrap text-center\"\n      >\n        {{ modelValueName }}\n      </p>\n      <slot v-else> Choose a file or drag it here </slot>\n    </div>\n\n    <Transition>\n      <div\n        v-if=\"props.loading\"\n        class=\"absolute inset-0 flex flex-col items-center justify-center gap-2 rounded-md\"\n      >\n        <v-spinner\n          size=\"35px\"\n          class=\"dark:border-blue-950\"\n        />\n\n        <span v-if=\"$slots.progress || props.progress !== undefined\">\n          <slot name=\"progress\"> {{ Math.floor(props.progress || 0) }}% </slot>\n        </span>\n      </div>\n    </Transition>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nconst props = defineProps<{\n  multiple?: boolean\n  extensions?: string[]\n  loading?: boolean\n  progress?: number\n  showFileName?: boolean\n  notificationId?: string\n}>()\n\nconst modelValue = defineModel<File | File[]>()\nconst hasModelValue = computed(() => {\n  if (Array.isArray(modelValue.value)) {\n    return Boolean(modelValue.value.length)\n  }\n\n  return Boolean(modelValue.value)\n})\nconst modelValueName = computed(() => {\n  if (!hasModelValue.value) {\n    return \"\"\n  }\n\n  if (Array.isArray(modelValue.value)) {\n    return modelValue.value.map((file) => file.name).join(\", \")\n  }\n\n  return modelValue.value?.name as string\n})\n\nconst input = ref<HTMLInputElement>()\n\nconst accept = computed(() => {\n  if (!props.extensions) {\n    return\n  }\n\n  return props.extensions.map((ext) => `.${ext}`).join(\", \")\n})\n\nwatchEffect(() => {\n  input.value?.addEventListener(\"change\", () => {\n    if (!input.value) {\n      return\n    }\n\n    const files = input.value.files\n\n    if (!validateExtensions(files)) {\n      input.value.value = \"\"\n      return\n    }\n\n    if (props.multiple) {\n      modelValue.value = files ? Array.from(files) : []\n    } else {\n      modelValue.value = files?.[0]\n    }\n\n    input.value.value = \"\"\n  })\n})\n\nfunction validateExtensions(payload: FileList | null): boolean {\n  if (!payload) {\n    return true\n  }\n\n  if (areExtensionsValid(payload)) {\n    return true\n  }\n\n  const { notifyError } = useNotification()\n\n  const subject = props.multiple ? \"Files\" : \"File\"\n  const extensions = props.extensions as string[]\n  const message =\n    extensions.length > 1\n      ? `${subject} should have one of the following extensions: ${accept.value}`\n      : `${subject} should have ${accept.value} extension`\n\n  notifyError(message, { duration: props.notificationId ? -1 : 5000, id: props.notificationId })\n  return false\n}\n\nfunction areExtensionsValid(files: FileList): boolean {\n  if (!props.extensions?.length) {\n    return true\n  }\n\n  const isExtensionValid = (file: File) => props.extensions?.some((extension) => file.name.endsWith(`.${extension}`))\n  return Array.from(files).every(isExtensionValid)\n}\n</script>\n","import type { AxiosProgressEvent } from \"axios\"\n\nexport function calculateUploadProgress(progressEvent: AxiosProgressEvent) {\n  return progressEvent.total ? Math.floor((progressEvent.loaded / progressEvent.total) * 100) : 0\n}\n"],"names":["props","__props","modelValue","_useModel","hasModelValue","computed","modelValueName","file","_a","input","ref","accept","ext","watchEffect","files","validateExtensions","payload","areExtensionsValid","notifyError","useNotification","subject","message","isExtensionValid","extension","calculateUploadProgress","progressEvent"],"mappings":"iyBAyDA,MAAMA,EAAQC,EASRC,EAAaC,gBAA2B,EACxCC,EAAgBC,EAAS,IACzB,MAAM,QAAQH,EAAW,KAAK,EACzB,EAAQA,EAAW,MAAM,OAG3B,EAAQA,EAAW,KAC3B,EACKI,EAAiBD,EAAS,IAAM,OAChC,OAACD,EAAc,MAIf,MAAM,QAAQF,EAAW,KAAK,EACzBA,EAAW,MAAM,IAAKK,GAASA,EAAK,IAAI,EAAE,KAAK,IAAI,GAGrDC,EAAAN,EAAW,QAAX,YAAAM,EAAkB,KAPhB,EAOgB,CAC1B,EAEKC,EAAQC,IAERC,EAASN,EAAS,IAAM,CACxB,GAACL,EAAM,WAIJ,OAAAA,EAAM,WAAW,IAAKY,GAAQ,IAAIA,CAAG,EAAE,EAAE,KAAK,IAAI,CAAA,CAC1D,EAEDC,EAAY,IAAM,QACVL,EAAAC,EAAA,QAAA,MAAAD,EAAO,iBAAiB,SAAU,IAAM,CACxC,GAAA,CAACC,EAAM,MACT,OAGI,MAAAK,EAAQL,EAAM,MAAM,MAEtB,GAAA,CAACM,EAAmBD,CAAK,EAAG,CAC9BL,EAAM,MAAM,MAAQ,GACpB,MACF,CAEIT,EAAM,SACRE,EAAW,MAAQY,EAAQ,MAAM,KAAKA,CAAK,EAAI,GAEpCZ,EAAA,MAAQY,GAAA,YAAAA,EAAQ,GAG7BL,EAAM,MAAM,MAAQ,EAAA,EACrB,CACF,EAED,SAASM,EAAmBC,EAAmC,CAKzD,GAJA,CAACA,GAIDC,EAAmBD,CAAO,EACrB,MAAA,GAGH,KAAA,CAAE,YAAAE,GAAgBC,IAElBC,EAAUpB,EAAM,SAAW,QAAU,OAErCqB,EADarB,EAAM,WAEZ,OAAS,EAChB,GAAGoB,CAAO,iDAAiDT,EAAO,KAAK,GACvE,GAAGS,CAAO,gBAAgBT,EAAO,KAAK,aAEhC,OAAAO,EAAAG,EAAS,CAAE,SAAUrB,EAAM,eAAiB,GAAK,IAAM,GAAIA,EAAM,cAAgB,CAAA,EACtF,EACT,CAEA,SAASiB,EAAmBH,EAA0B,OAChD,GAAA,GAACN,EAAAR,EAAM,aAAN,MAAAQ,EAAkB,QACd,MAAA,GAGT,MAAMc,EAAoBf,GAAe,OAAA,OAAAC,EAAAR,EAAM,aAAN,YAAAQ,EAAkB,KAAMe,GAAchB,EAAK,KAAK,SAAS,IAAIgB,CAAS,EAAE,IACjH,OAAO,MAAM,KAAKT,CAAK,EAAE,MAAMQ,CAAgB,CACjD,+yBClJO,SAASE,EAAwBC,EAAmC,CAClE,OAAAA,EAAc,MAAQ,KAAK,MAAOA,EAAc,OAASA,EAAc,MAAS,GAAG,EAAI,CAChG"}