{"version":3,"file":"B3TojsX6.js","sources":["../../../../../../packages/core/components/v-input/v-input.vue"],"sourcesContent":["<template>\n  <div>\n    <input\n      ref=\"input\"\n      v-model=\"value\"\n      :placeholder=\"props.placeholder\"\n      :type=\"props.type\"\n      :autofocus=\"props.autofocus\"\n      v-bind=\"props.inputAttrs\"\n      class=\"w-full rounded-sm border border-gray-200 bg-gray-50 p-2 outline-none transition focus:!border-blue-700 dark:border-gray-400 dark:bg-gray-600\"\n      :class=\"{\n        'cursor-not-allowed opacity-70': props.disabled,\n      }\"\n      :disabled=\"props.disabled\"\n    />\n    <p\n      v-if=\"props.maxLength\"\n      class=\"mt-1 text-right text-sm text-zinc-400\"\n    >\n      {{ value.length }}/{{ props.maxLength }}\n    </p>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nconst props = defineProps<{\n  maxLength?: number\n  placeholder?: string\n  type?: string\n  autofocus?: boolean\n  disabled?: boolean\n  inputAttrs?: Record<string, string>\n}>()\n\nconst value = defineModel<string>({ default: \"\" })\nconst input = ref<HTMLInputElement>()\nuseFocus(input, { initialValue: props.autofocus })\n\nwatchEffect(() => {\n  if (!props.maxLength) {\n    return\n  }\n\n  if (value.value.length > props.maxLength) {\n    value.value = value.value.slice(0, props.maxLength)\n  }\n})\n</script>\n"],"names":["props","__props","value","_useModel","input","ref","useFocus","watchEffect"],"mappings":"mcAyBA,MAAMA,EAAQC,EASRC,EAAQC,EAAmBF,EAAA,YAAgB,EAC3CG,EAAQC,IACd,OAAAC,EAASF,EAAO,CAAE,aAAcJ,EAAM,SAAW,CAAA,EAEjDO,EAAY,IAAM,CACXP,EAAM,WAIPE,EAAM,MAAM,OAASF,EAAM,YAC7BE,EAAM,MAAQA,EAAM,MAAM,MAAM,EAAGF,EAAM,SAAS,EACpD,CACD"}