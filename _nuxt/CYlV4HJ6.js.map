{"version":3,"file":"CYlV4HJ6.js","sources":["../../../../../../packages/core/types/api/testing.ts","../../../../pages/developer/tokens/create.vue"],"sourcesContent":["export enum ServiceTokenType {\n  \"Push Notifications Sending\" = \"push\",\n  \"App Attestation Verification\" = \"attest-verify\",\n}\n\nexport interface ServiceToken {\n  token: string\n  token_type: ServiceTokenType\n  added_at: number\n  legal_entity_id: number\n  app_identifier: string\n}\n\nexport interface TestDevice {\n  udid: string\n  permanent_device_identifier: string\n  failure_domain_identifier: string\n  account_id: number\n}\n\nexport interface FailureDomain {\n  identifier: string\n  description: string\n}\n","<template>\n  <div>\n    <v-h1 default-back-to=\"/developer/tokens\">Create service token</v-h1>\n    <form\n      class=\"flex flex-col gap-5\"\n      @submit.prevent=\"submit\"\n    >\n      <v-label label=\"App identifier\">\n        <v-dropdown\n          v-model=\"form.app_identifier\"\n          class=\"w-60\"\n          placeholder=\"Choose app identifier\"\n          :options=\"identifierOptions\"\n        />\n      </v-label>\n      <v-label\n        label=\"Service token type\"\n        hint=\"Push - to send pushes to devices.<br>Attest - to get app attestation data from appdb servers.\"\n      >\n        <v-dropdown\n          v-model=\"form.type\"\n          class=\"w-60\"\n          placeholder=\"Choose type\"\n          :options=\"typeOptions\"\n        />\n      </v-label>\n      <div class=\"flex gap-2\">\n        <v-button\n          :loading=\"isSubmitting\"\n          variant=\"primary\"\n        >\n          Create\n        </v-button>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { Payload } from \"core/types/api\"\nimport { ServiceTokenType } from \"core/types/api/testing\"\n\nconst form = reactive<Payload<typeof createServiceToken>>({\n  type: undefined,\n  app_identifier: \"\",\n})\n\nconst identifiers = await getApps()\nconst identifierOptions = identifiers.map((id) => ({ label: `${id.label} - ${id.identifier}`, value: id.identifier }))\n\nconst typeOptions = Object.entries(ServiceTokenType).map(([label, value]) => ({ label, value }))\n\nconst isSubmitting = ref(false)\nasync function submit() {\n  isSubmitting.value = true\n\n  try {\n    await createServiceToken(form)\n\n    const { notifySuccess } = useNotification()\n    notifySuccess(\"New service token was created\")\n    navigateTo(\"/developer/tokens\")\n  } finally {\n    isSubmitting.value = false\n  }\n}\n</script>\n"],"names":["ServiceTokenType","form","reactive","identifierOptions","__temp","__restore","_withAsyncContext","getApps","id","typeOptions","label","value","isSubmitting","ref","submit","createServiceToken","notifySuccess","useNotification","navigateTo"],"mappings":"0VAAY,IAAAA,GAAAA,IACVA,EAAA,4BAA+B,EAAA,OAC/BA,EAAA,8BAAiC,EAAA,gBAFvBA,IAAAA,GAAA,CAAA,CAAA,2EC0CZ,MAAMC,EAAOC,EAA6C,CACxD,KAAM,OACN,eAAgB,EAAA,CACjB,EAGKC,GADc,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAMC,GAAQ,mBACI,IAAKC,IAAQ,CAAE,MAAO,GAAGA,EAAG,KAAK,MAAMA,EAAG,UAAU,GAAI,MAAOA,EAAG,UAAa,EAAA,EAE/GC,EAAc,OAAO,QAAQT,CAAgB,EAAE,IAAI,CAAC,CAACU,EAAOC,CAAK,KAAO,CAAE,MAAAD,EAAO,MAAAC,GAAQ,EAEzFC,EAAeC,EAAI,EAAK,EAC9B,eAAeC,GAAS,CACtBF,EAAa,MAAQ,GAEjB,GAAA,CACF,MAAMG,EAAmBd,CAAI,EAEvB,KAAA,CAAE,cAAAe,GAAkBC,IAC1BD,EAAc,+BAA+B,EAC7CE,EAAW,mBAAmB,CAAA,QAC9B,CACAN,EAAa,MAAQ,EACvB,CACF"}