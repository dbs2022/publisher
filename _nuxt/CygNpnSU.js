import{_ as w}from"./Ge0PHlf4.js";import{_ as V}from"./Bsbk6AGL.js";import{_ as k}from"./VXbtWGCk.js";import{_ as x}from"./CjxAut2S.js";import{f as C,G as A,g as N,r as $,o as S,c as B,b as a,w as r,d as _,a as m,j as t,s as O,i as j,D as P}from"./KoDMvfaN.js";import{c as U}from"./Dxb6NMjF.js";import"./CpCrrJFV.js";import"./DUJqKy6i.js";var u=(i=>(i["Push Notifications Sending"]="push",i["App Attestation Verification"]="attest-verify",i))(u||{});const D={class:"flex flex-col gap-5"},E={class:"flex gap-2"},L=C({__name:"create",async setup(i){let n,c;const s=A({type:void 0,app_identifier:""}),v=([n,c]=N(()=>O()),n=await n,c(),n).map(e=>({label:`${e.label} - ${e.identifier}`,value:e.identifier})),b=Object.entries(u).map(([e,o])=>({label:e,value:o})),p=$(!1);async function y(){p.value=!0;try{await U(s);const{notifySuccess:e}=j();e("New service token was created"),P("/developer/tokens")}finally{p.value=!1}}return(e,o)=>{const h=w,d=V,f=k,g=x;return S(),B("div",null,[a(h,{"back-to":"/developer/tokens"},{default:r(()=>[_("Create service token")]),_:1}),m("form",D,[a(f,{label:"App identifier"},{default:r(()=>[a(d,{modelValue:t(s).app_identifier,"onUpdate:modelValue":o[0]||(o[0]=l=>t(s).app_identifier=l),class:"w-60",placeholder:"Choose app identifier",options:t(v)},null,8,["modelValue","options"])]),_:1}),a(f,{label:"Service token type",hint:"Push - to send pushes to devices.<br>Attest - to get app attestation data from appdb servers."},{default:r(()=>[a(d,{modelValue:t(s).type,"onUpdate:modelValue":o[1]||(o[1]=l=>t(s).type=l),class:"w-60",placeholder:"Choose type",options:t(b)},null,8,["modelValue","options"])]),_:1}),m("div",E,[a(g,{loading:t(p),variant:"primary",onClick:y},{default:r(()=>[_(" Create ")]),_:1},8,["loading"])])])])}}});export{L as default};
//# sourceMappingURL=CygNpnSU.js.map
