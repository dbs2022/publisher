{"version":3,"file":"Dsan3dAC.js","sources":["../../../../../../packages/core/types/api/index.ts","../../../../../../packages/core/utils/getDeviceNameByOS.ts","../../../../components/v-modal/v-modal-binary-package-metadata-copy.vue","../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/cloneDeep.js","../../../../pages/apps/binary-packages/manage/[id].vue"],"sourcesContent":["import type { AxiosRequestConfig } from \"axios\"\n\nexport interface RequestOptions extends AxiosRequestConfig {\n  silent?: boolean\n}\nexport interface Response<T = unknown> {\n  errors: ResponseError[]\n  success: boolean\n  data: T\n}\n\nexport type ResponseErrorCode = \"ERROR_INVALID_STAFF_TOKEN\" | \"ERROR_NO_SUCH_ACCOUNT\" | \"ERROR_LEGAL_ENTITY_NOT_DEFINED\"\n\nexport interface ResponseError {\n  code: ResponseErrorCode\n  translated: string\n}\n\nexport enum OS {\n  iOS = \"ios\",\n  iPad = \"ipados\",\n  Mac = \"macos\",\n  Vision = \"visionos\",\n  TV = \"tvos\",\n}\n\nexport type Payload<T extends (...args: never[]) => unknown> = Parameters<T>[0]\n\nexport * from \"./publisher\"\nexport * from \"./legal\"\nexport * from \"./content\"\n","import { OS } from \"core/types/api\"\n\nconst dictionary: Record<string, string> = {\n  [OS.Mac]: \"Mac\",\n  [OS.TV]: \"Apple TV\",\n  [OS.Vision]: \"Apple Vision\",\n  [OS.iOS]: \"iPhone\",\n  [OS.iPad]: \"iPad\",\n}\n\nexport default function getDeviceNameByOS(os: string): string | undefined {\n  return dictionary[os]\n}\n","<template>\n  <v-modal\n    ref=\"modal\"\n    v-model=\"isVisible\"\n  >\n    <template #header> Fill metadata from another IPA package </template>\n\n    <v-spinner\n      v-if=\"isLoading\"\n      class=\"border-blue-700/30 border-l-blue-700\"\n      size=\"4rem\"\n    />\n    <v-table v-else>\n      <template #head>\n        <v-tr>\n          <v-th>Version</v-th>\n          <v-th>Status</v-th>\n          <v-th>Is assigned</v-th>\n          <v-th>Is actual</v-th>\n          <v-th />\n        </v-tr>\n      </template>\n\n      <template #empty>No IPA packages were found</template>\n\n      <template #body>\n        <v-tr\n          v-for=\"ipa of filteredIPAs\"\n          :key=\"ipa.id\"\n        >\n          <v-td>{{ ipa.bundle_version }}</v-td>\n          <v-td>{{ ipa.status_translated }}</v-td>\n          <v-td>{{ ipa.is_assigned ? \"Yes\" : \"No\" }}</v-td>\n          <v-td>{{ ipa.is_in_store ? \"Yes\" : \"No\" }}</v-td>\n          <v-td>\n            <div class=\"flex flex-col gap-1.5\">\n              <v-button\n                variant=\"primary\"\n                @click=\"select(ipa)\"\n              >\n                Select\n              </v-button>\n            </div>\n          </v-td>\n        </v-tr>\n      </template>\n    </v-table>\n  </v-modal>\n</template>\n\n<script setup lang=\"ts\">\nimport { VModal } from \"#components\"\nimport type { OfficialIPA } from \"core/types/api\"\n\nconst props = defineProps<{\n  id: number\n  scope: string\n}>()\n\nconst emit = defineEmits<{\n  (e: \"selected\", ipa: OfficialIPA): void\n}>()\n\nconst modal = ref<InstanceType<typeof VModal>>()\nconst isVisible = ref(false)\n\ndefineExpose({\n  show: () => modal.value?.show(),\n  hide: () => modal.value?.hide(),\n})\n\nconst isLoading = ref(false)\nconst IPAs = ref<OfficialIPA[]>([])\nconst filteredIPAs = computed(() => IPAs.value.filter((ipa) => ipa.id !== props.id))\n\nwatchEffect(() => {\n  if (isVisible.value) {\n    load()\n  }\n})\n\nasync function load() {\n  isLoading.value = true\n\n  try {\n    IPAs.value = await getOfficialIPAs({ scope: props.scope })\n  } finally {\n    isLoading.value = false\n  }\n}\n\nfunction select(ipa: OfficialIPA) {\n  emit(\"selected\", ipa)\n  modal.value?.hide()\n}\n</script>\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n","<template>\n  <div>\n    <v-h1 :default-back-to=\"backPath\">{{ title }}</v-h1>\n\n    <form\n      class=\"flex flex-col gap-5\"\n      @submit.prevent=\"submit\"\n    >\n      <div class=\"grid auto-cols-fr grid-flow-col gap-5\">\n        <v-label label=\"Min. iOS version\">\n          <v-input v-model=\"form.min_ios_version\" />\n        </v-label>\n        <v-label label=\"Min. iPadOS version\">\n          <v-input v-model=\"form.min_ipados_version\" />\n        </v-label>\n        <v-label label=\"Min. watchOS version\">\n          <v-input v-model=\"form.min_watchos_version\" />\n        </v-label>\n        <v-label label=\"Min. macOS version\">\n          <v-input v-model=\"form.min_macos_version\" />\n        </v-label>\n        <v-label label=\"Min. visionOS version\">\n          <v-input v-model=\"form.min_visionos_version\" />\n        </v-label>\n        <v-label label=\"Min. tvOS version\">\n          <v-input v-model=\"form.min_tvos_version\" />\n        </v-label>\n      </div>\n\n      <div>\n        <v-h2 class=\"mb-3\">Screenshots</v-h2>\n        <v-toggle-buttons\n          v-model=\"selectedScreenshotsOS\"\n          class=\"mb-4\"\n          :options=\"screenshotsOSOptions\"\n        />\n        <v-file\n          v-model=\"screenshotFiles\"\n          :loading=\"areScreenshotsUploading\"\n          :progress=\"screenshotsAverageUploadProgress\"\n          :extensions=\"['png']\"\n          multiple\n          notification-id=\"edit_official_ipa_metadata\"\n        >\n          Choose screenshots or drag them here\n        </v-file>\n\n        <div\n          v-if=\"form.screenshots_uris_by_os_type[selectedScreenshotsOS]?.length\"\n          class=\"mt-5 flex h-96 gap-5 overflow-auto\"\n        >\n          <div\n            v-for=\"(uri, idx) of form.screenshots_uris_by_os_type[selectedScreenshotsOS]\"\n            :key=\"uri\"\n            class=\"relative h-full shrink-0\"\n          >\n            <button\n              class=\"absolute right-0 top-0 flex h-5 w-5 items-center justify-center rounded-full bg-red-500 leading-none text-white\"\n              @click=\"form.screenshots_uris_by_os_type[selectedScreenshotsOS].splice(idx, 1)\"\n            >\n              <Icon name=\"tabler:x\" />\n            </button>\n            <img\n              class=\"h-full\"\n              :src=\"uri\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <v-info>App description and what's new notes support markdown</v-info>\n\n      <v-label label=\"Description\">\n        <v-textarea\n          v-model=\"form.description\"\n          :rows=\"3\"\n        />\n      </v-label>\n\n      <v-label label=\"What's new\">\n        <v-textarea\n          v-model=\"form.whatsnew\"\n          :rows=\"3\"\n        />\n      </v-label>\n\n      <div class=\"flex gap-2\">\n        <v-button\n          variant=\"primary\"\n          :loading=\"isSubmitting\"\n        >\n          Save\n        </v-button>\n\n        <v-button @click.prevent=\"copyModal?.show()\"> Fill from another IPA package</v-button>\n      </div>\n    </form>\n  </div>\n\n  <v-modal-binary-package-metadata-copy\n    :id=\"id\"\n    ref=\"copyModal\"\n    :scope=\"ipa.app_identifier\"\n    @selected=\"fillForm($event, { filterUniqueFields: true })\"\n  />\n</template>\n\n<script setup lang=\"ts\">\nimport { capitalize, cloneDeep } from \"lodash-es\"\nimport { OS, OfficialIPAScreenshotOS, type OfficialIPA } from \"core/types/api\"\nimport { VModalBinaryPackageMetadataCopy } from \"#components\"\n\nconst { title, backPath } = useManagePage(\"metadata\")\n\nconst route = useRoute()\nconst id = Number(route.params.id)\n\nconst [ipa] = await getOfficialIPAs({ id })\n\nconst form = reactive<Parameters<typeof editOfficialIPAMetadata>[0]>({\n  id,\n  min_ios_version: \"\",\n  min_ipados_version: \"\",\n  min_tvos_version: \"\",\n  min_macos_version: \"\",\n  min_watchos_version: \"\",\n  min_visionos_version: \"\",\n  description: \"\",\n  whatsnew: \"\",\n  screenshots_uris_by_os_type: {\n    ios: [],\n    ipados: [],\n    macos: [],\n    tvos: [],\n    universal: [],\n    visionos: [],\n  },\n})\n\nconst copyModal = ref<InstanceType<typeof VModalBinaryPackageMetadataCopy>>()\n\nfunction fillForm(ipa: OfficialIPA, { filterUniqueFields }: { filterUniqueFields?: boolean } = {}) {\n  if (!ipa) {\n    return\n  }\n\n  const uniqueFields = [\"id\"]\n\n  for (const k in form) {\n    const key = k as keyof typeof form & keyof typeof ipa\n\n    if (!(key in ipa) || (filterUniqueFields && uniqueFields.includes(key))) {\n      continue\n    }\n\n    if (form[key] && ipa[key] === null) {\n      continue\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    form[key] = cloneDeep(ipa[key]) as any\n  }\n}\n\nfillForm(ipa)\n\nconst screenshotsOSs = computed(() => {\n  const activeOSs = Object.values(OS).filter((os) => form[`min_${os}_version`])\n  return [\"universal\", ...activeOSs] as OfficialIPAScreenshotOS[]\n})\n\nconst screenshotsOSOptions = computed(() => screenshotsOSs.value.map((os) => ({ label: getDeviceNameByOS(os) || capitalize(os), value: os })))\n\nconst selectedScreenshotsOS = ref<OfficialIPAScreenshotOS>(screenshotsOSs.value[0])\nwatchEffect(() => {\n  if (screenshotsOSs.value.includes(selectedScreenshotsOS.value)) {\n    return\n  }\n\n  selectedScreenshotsOS.value = screenshotsOSs.value[0]\n})\n\nconst areScreenshotsUploading = ref(false)\nconst screenshotsUploadProgress = ref<number[]>([])\nconst screenshotsAverageUploadProgress = computed(() => {\n  if (!screenshotsUploadProgress.value.length) {\n    return 0\n  }\n\n  return screenshotsUploadProgress.value.reduce((sum, p) => sum + p) / screenshotsUploadProgress.value.length\n})\nconst screenshotFiles = ref<File[]>([])\nwatch(screenshotFiles, async () => {\n  if (!screenshotFiles.value.length) {\n    return\n  }\n\n  const os = selectedScreenshotsOS.value\n  areScreenshotsUploading.value = true\n  screenshotsUploadProgress.value = Array(screenshotFiles.value.length).fill(0)\n\n  try {\n    const uploadPromises = screenshotFiles.value.map((file, idx) =>\n      uploadFile(\n        {\n          type: \"screenshot\",\n          file,\n        },\n        {\n          onUploadProgress: (progressEvent) => {\n            screenshotsUploadProgress.value[idx] = calculateUploadProgress(progressEvent)\n          },\n        }\n      )\n    )\n\n    const urls = await Promise.all(uploadPromises)\n    form.screenshots_uris_by_os_type[os].push(...urls)\n  } finally {\n    areScreenshotsUploading.value = false\n    screenshotsUploadProgress.value = []\n  }\n})\n\nconst isSubmitting = ref(false)\n\nasync function submit() {\n  isSubmitting.value = true\n\n  try {\n    const processedForm = cloneDeep(form)\n    for (const os of Object.values(OS)) {\n      if (!processedForm[`min_${os}_version`]) {\n        processedForm.screenshots_uris_by_os_type[os] = []\n      }\n    }\n\n    await editOfficialIPAMetadata(processedForm)\n\n    navigateTo(\"/apps/binary-packages\")\n    const { notifySuccess } = useNotification()\n    notifySuccess(\"IPA package metadata was saved\")\n  } finally {\n    isSubmitting.value = false\n  }\n}\n</script>\n"],"names":["OS","dictionary","getDeviceNameByOS","os","props","__props","emit","__emit","modal","ref","isVisible","__expose","_a","isLoading","IPAs","filteredIPAs","computed","ipa","watchEffect","load","getOfficialIPAs","select","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","cloneDeep","value","baseClone","title","backPath","useManagePage","route","useRoute","id","__temp","__restore","_withAsyncContext","form","reactive","copyModal","fillForm","filterUniqueFields","uniqueFields","k","key","screenshotsOSs","screenshotsOSOptions","capitalize","selectedScreenshotsOS","areScreenshotsUploading","screenshotsUploadProgress","screenshotsAverageUploadProgress","sum","p","screenshotFiles","watch","uploadPromises","file","idx","uploadFile","progressEvent","calculateUploadProgress","urls","isSubmitting","submit","processedForm","editOfficialIPAMetadata","navigateTo","notifySuccess","useNotification"],"mappings":"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","x_google_ignoreList":[3]}