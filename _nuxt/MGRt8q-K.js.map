{"version":3,"file":"MGRt8q-K.js","sources":["../../../../../../packages/core/components/v-labeled-detail.vue","../../../../components/v-modal/v-modal-upload-document.vue","../../../../pages/legal/overview.vue"],"sourcesContent":["<template>\n  <v-label :label=\"props.label\">\n    <slot v-if=\"isFilled\" />\n    <span\n      v-else\n      class=\"italic text-zinc-400 dark:text-gray-400\"\n    >\n      Not filled\n    </span>\n  </v-label>\n</template>\n\n<script setup lang=\"ts\">\nconst props = defineProps<{\n  label: string\n}>()\n\nconst slots = useSlots()\nconst isFilled = computed(() => {\n  const nodes = slots.default?.()\n  if (!nodes) {\n    return false\n  }\n\n  const textNodes = nodes.filter((node) => node.patchFlag === 1) // can't import vue's core enum :(\n  if (!textNodes.length) {\n    return true\n  }\n\n  return textNodes.some((node) => {\n    if (typeof node.children === \"string\") {\n      return Boolean(node.children.trim())\n    }\n\n    return false\n  })\n})\n</script>\n","<template>\n  <v-modal\n    ref=\"modal\"\n    v-model=\"isVisible\"\n    size=\"w-[40rem]\"\n  >\n    <template #header> Upload supporting document </template>\n\n    <v-info class=\"mb-2\">You can pick any suggested name of the document or enter it manually</v-info>\n\n    <form class=\"flex flex-col gap-5\">\n      <v-label label=\"Document name\">\n        <v-dropdown\n          v-model=\"form.name\"\n          :options=\"nameOptions\"\n          show-clear\n          editable\n          class=\"w-full\"\n        />\n      </v-label>\n\n      <v-file\n        v-model=\"form.pdf\"\n        :extensions=\"['pdf']\"\n        show-file-name\n        :loading=\"isUploading\"\n        :progress=\"uploadingProgress\"\n        notification-id=\"add_legal_file\"\n      >\n        Choose document in PDF format or drag it here\n      </v-file>\n    </form>\n\n    <template #footer>\n      <v-button\n        variant=\"primary\"\n        :loading=\"isUploading\"\n        @click=\"upload\"\n      >\n        Upload\n      </v-button>\n    </template>\n  </v-modal>\n</template>\n\n<script setup lang=\"ts\">\nimport { VModal } from \"#components\"\nimport type { Payload } from \"core/types/api\"\n\nconst props = defineProps<{\n  legalEntityId: number\n}>()\n\nconst emit = defineEmits<{\n  (e: \"uploaded\"): void\n}>()\n\nconst modal = ref<InstanceType<typeof VModal>>()\nconst isVisible = ref(false)\n\ndefineExpose({\n  show: () => modal.value?.show(),\n  hide: () => modal.value?.hide(),\n})\n\nconst form = reactive<Payload<typeof addLegalFile>>({\n  legal_entity_id: props.legalEntityId,\n  name: \"\",\n  pdf: undefined,\n})\n\nconst nameOptions = [\n  \"Extract from corporate registry\",\n  \"VAT certificate\",\n  \"Articles of association\",\n  \"Power of attorney\",\n  \"Proof of address\",\n  \"Bank statement\",\n].map((name) => ({ label: name, value: name }))\n\nconst isUploading = ref(false)\nconst uploadingProgress = ref(0)\nasync function upload() {\n  if (isUploading.value) {\n    return\n  }\n\n  isUploading.value = true\n  try {\n    // TODO cancel request when closing modal\n    await addLegalFile(form, {\n      onUploadProgress: (progressEvent) => {\n        uploadingProgress.value = calculateUploadProgress(progressEvent)\n      },\n    })\n    emit(\"uploaded\")\n    isVisible.value = false\n    form.name = \"\"\n    form.pdf = undefined\n  } finally {\n    uploadingProgress.value = 0\n    isUploading.value = false\n  }\n}\n</script>\n","<template>\n  <div>\n    <v-h1>Legal overview</v-h1>\n\n    <template v-if=\"entity\">\n      <div class=\"flex items-center gap-4\">\n        <v-h2>\n          {{ entity.name }}\n        </v-h2>\n        <v-button\n          variant=\"primary\"\n          to=\"/legal/info/manage\"\n        >\n          Edit information\n        </v-button>\n      </div>\n\n      <div class=\"mt-4 flex flex-col items-stretch gap-5\">\n        <div class=\"flex gap-5\">\n          <v-labeled-detail label=\"Status\">\n            <v-html :content=\"entity.status_translated\" />\n          </v-labeled-detail>\n\n          <v-labeled-detail\n            v-if=\"entity.last_status_validation_issue\"\n            label=\"Last status validation issue\"\n          >\n            <v-html\n              class=\"whitespace-pre-line\"\n              :content=\"entity.last_status_validation_issue\"\n            />\n          </v-labeled-detail>\n        </div>\n\n        <div class=\"flex flex-wrap gap-5\">\n          <v-labeled-detail label=\"Legal type\">\n            {{ entity.type }}\n          </v-labeled-detail>\n          <v-labeled-detail label=\"Legal name\">\n            {{ entity.name }}\n          </v-labeled-detail>\n          <v-labeled-detail label=\"Legal address\">\n            {{ entity.address }}\n          </v-labeled-detail>\n          <v-labeled-detail label=\"Country\">\n            {{ entity.country }}\n          </v-labeled-detail>\n          <v-labeled-detail label=\"VAT number\">\n            {{ entity.vat_number }}\n          </v-labeled-detail>\n          <v-labeled-detail label=\"Registry code\">\n            {{ entity.registry_code }}\n          </v-labeled-detail>\n        </div>\n\n        <div>\n          <v-h3 class=\"mb-2\">Representative</v-h3>\n          <div class=\"flex gap-5\">\n            <v-labeled-detail label=\"Name\">\n              {{ entity.representative_name }}\n            </v-labeled-detail>\n            <v-labeled-detail label=\"Email\">\n              {{ entity.representative_email }}\n            </v-labeled-detail>\n            <v-labeled-detail label=\"Phone\">\n              {{ entity.representative_number }}\n            </v-labeled-detail>\n            <v-labeled-detail label=\"Position\">\n              {{ entity.representative_position }}\n            </v-labeled-detail>\n          </div>\n        </div>\n\n        <div>\n          <v-h3 class=\"mb-2\">Signatory</v-h3>\n          <div class=\"flex gap-5\">\n            <v-labeled-detail label=\"Name\">\n              {{ entity.signatory_name }}\n            </v-labeled-detail>\n            <v-labeled-detail label=\"Email\">\n              {{ entity.signatory_email }}\n            </v-labeled-detail>\n            <v-labeled-detail label=\"Phone\">\n              {{ entity.signatory_number }}\n            </v-labeled-detail>\n            <v-labeled-detail label=\"Position\">\n              {{ entity.signatory_position }}\n            </v-labeled-detail>\n          </div>\n        </div>\n\n        <div>\n          <v-h3 class=\"mb-2\">Bank account details</v-h3>\n          <div class=\"flex flex-wrap gap-5\">\n            <v-labeled-detail label=\"Bank name\">\n              {{ entity.bank_name }}\n            </v-labeled-detail>\n            <v-labeled-detail label=\"Address\">\n              {{ entity.bank_address }}\n            </v-labeled-detail>\n            <v-labeled-detail label=\"BIC/SWIFT\">\n              {{ entity.bank_swift }}\n            </v-labeled-detail>\n            <v-labeled-detail label=\"Account number / IBAN\">\n              {{ entity.bank_iban }}\n            </v-labeled-detail>\n          </div>\n        </div>\n      </div>\n    </template>\n    <v-button\n      v-else\n      variant=\"primary\"\n      to=\"/legal/info/manage\"\n    >\n      Add information\n    </v-button>\n\n    <div v-if=\"entity\">\n      <div class=\"mb-2 mt-5 flex items-center gap-4\">\n        <v-modal-upload-document\n          ref=\"uploadDocumentModal\"\n          :legal-entity-id=\"entity.id\"\n          @uploaded=\"loadDocuments\"\n        />\n\n        <v-h2>Supporting documents</v-h2>\n        <v-button\n          variant=\"primary\"\n          @click=\"uploadDocumentModal?.show()\"\n        >\n          Upload\n        </v-button>\n      </div>\n\n      <v-table :loading=\"areDocumentsLoading\">\n        <template #head>\n          <v-tr>\n            <v-th>Name</v-th>\n            <v-th>Status</v-th>\n            <v-th>Last status validation issue</v-th>\n            <v-th></v-th>\n          </v-tr>\n        </template>\n\n        <template #empty> No documents found </template>\n\n        <template #body>\n          <v-tr\n            v-for=\"document of documents\"\n            :key=\"document.id\"\n          >\n            <v-td>{{ document.name }}</v-td>\n            <v-td>{{ document.status_translated }}</v-td>\n            <v-td>{{ document.last_status_validation_issue }}</v-td>\n            <v-td>\n              <div class=\"flex justify-end gap-1.5\">\n                <v-button\n                  v-if=\"document.status !== LegalFileStatus.Ok\"\n                  :loading=\"documentBeingDeleted === document.id\"\n                  variant=\"danger\"\n                  @click=\"deleteDocument(document.id)\"\n                >\n                  Delete\n                </v-button>\n              </div>\n            </v-td>\n          </v-tr>\n        </template>\n      </v-table>\n    </div>\n\n    <v-h2 class=\"mb-2 mt-5\">Agreements</v-h2>\n    <v-table>\n      <template #head>\n        <v-tr>\n          <v-th>Document title</v-th>\n          <v-th>Signed</v-th>\n          <v-th>Signatory</v-th>\n          <v-th>Signing date</v-th>\n          <v-th></v-th>\n        </v-tr>\n      </template>\n\n      <template #empty> No agreements found </template>\n\n      <template #body>\n        <v-tr\n          v-for=\"agreement of agreements\"\n          :key=\"agreement.id\"\n        >\n          <v-td>{{ agreement.name }}</v-td>\n          <v-td>{{ agreement.signed_at ? \"Yes\" : \"No\" }}</v-td>\n          <v-td>{{ agreement.signatory_name }}</v-td>\n          <v-td>{{ agreement.signed_at ? new Date((agreement.signed_at as number) * 1000).toLocaleString() : \"\" }}</v-td>\n          <v-td>\n            <div class=\"flex justify-end gap-1.5\">\n              <v-button\n                :to=\"agreement.uri\"\n                target=\"_blank\"\n              >\n                View / Download\n              </v-button>\n            </div>\n          </v-td>\n        </v-tr>\n      </template>\n    </v-table>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { VModalUploadDocument } from \"#components\"\nimport { LegalFileStatus, type LegalFile } from \"core/types/api\"\n\nconst entity = await getLegalEntity().catch((e) => {\n  if (e instanceof APIError && e.hasCode(\"ERROR_LEGAL_ENTITY_NOT_DEFINED\")) {\n    return null\n  }\n\n  throw e\n})\n\nconst uploadDocumentModal = ref<InstanceType<typeof VModalUploadDocument>>()\nconst documents = ref<LegalFile[]>([])\nconst areDocumentsLoading = ref(false)\nawait loadDocuments()\nasync function loadDocuments() {\n  if (!entity) {\n    return []\n  }\n\n  areDocumentsLoading.value = true\n\n  try {\n    const response = await getLegalFiles({ legal_entity_id: entity.id })\n    documents.value = response\n  } catch {\n    documents.value = []\n  } finally {\n    areDocumentsLoading.value = false\n  }\n}\n\nconst documentBeingDeleted = ref<null | number>()\nasync function deleteDocument(id: number) {\n  if (documentBeingDeleted.value || !confirm(\"Are you sure you want to delete this document?\")) {\n    return\n  }\n\n  documentBeingDeleted.value = id\n  try {\n    await deleteLegalFile({ id })\n\n    const idx = documents.value.findIndex((doc) => doc.id === id)\n    documents.value.splice(idx, 1)\n  } finally {\n    documentBeingDeleted.value = null\n  }\n}\n\nconst { allAgreements: agreements } = storeToRefs(useAgreementsStore())\n</script>\n"],"names":["props","__props","slots","useSlots","isFilled","computed","nodes","_a","textNodes","node","emit","__emit","modal","ref","isVisible","__expose","form","reactive","nameOptions","name","isUploading","uploadingProgress","upload","addLegalFile","progressEvent","calculateUploadProgress","entity","__temp","__restore","_withAsyncContext","getLegalEntity","e","APIError","uploadDocumentModal","documents","areDocumentsLoading","loadDocuments","response","getLegalFiles","documentBeingDeleted","deleteDocument","id","deleteLegalFile","idx","doc","agreements","storeToRefs","useAgreementsStore"],"mappings":"8yBAaA,MAAMA,EAAQC,EAIRC,EAAQC,IACRC,EAAWC,EAAS,IAAM,OACxB,MAAAC,GAAQC,EAAAL,EAAM,UAAN,YAAAK,EAAA,KAAAL,GACd,GAAI,CAACI,EACI,MAAA,GAGT,MAAME,EAAYF,EAAM,OAAQG,GAASA,EAAK,YAAc,CAAC,EACzD,OAACD,EAAU,OAIRA,EAAU,KAAMC,GACjB,OAAOA,EAAK,UAAa,SACpB,EAAQA,EAAK,SAAS,KAAM,EAG9B,EACR,EATQ,EASR,CACF,qTCaD,MAAMT,EAAQC,EAIRS,EAAOC,EAIPC,EAAQC,IACRC,EAAYD,EAAI,EAAK,EAEdE,EAAA,CACX,KAAM,IAAM,OAAA,OAAAR,EAAAK,EAAM,QAAN,YAAAL,EAAa,QACzB,KAAM,IAAM,OAAA,OAAAA,EAAAK,EAAM,QAAN,YAAAL,EAAa,OAAK,CAC/B,EAED,MAAMS,EAAOC,EAAuC,CAClD,gBAAiBjB,EAAM,cACvB,KAAM,GACN,IAAK,MAAA,CACN,EAEKkB,EAAc,CAClB,kCACA,kBACA,0BACA,oBACA,mBACA,gBAAA,EACA,IAAKC,IAAU,CAAE,MAAOA,EAAM,MAAOA,CAAO,EAAA,EAExCC,EAAcP,EAAI,EAAK,EACvBQ,EAAoBR,EAAI,CAAC,EAC/B,eAAeS,GAAS,CACtB,GAAI,CAAAF,EAAY,MAIhB,CAAAA,EAAY,MAAQ,GAChB,GAAA,CAEF,MAAMG,EAAaP,EAAM,CACvB,iBAAmBQ,GAAkB,CACjBH,EAAA,MAAQI,GAAwBD,CAAa,CACjE,CAAA,CACD,EACDd,EAAK,UAAU,EACfI,EAAU,MAAQ,GAClBE,EAAK,KAAO,GACZA,EAAK,IAAM,MAAA,QACX,CACAK,EAAkB,MAAQ,EAC1BD,EAAY,MAAQ,EACtB,EACF,+5CCgHM,MAAAM,GAAS,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAMC,EAAe,EAAE,MAAOC,GAAM,CACjD,GAAIA,aAAaC,IAAYD,EAAE,QAAQ,gCAAgC,EAC9D,OAAA,KAGH,MAAAA,CAAA,CACP,CAAA,mBAEKE,EAAsBpB,IACtBqB,EAAYrB,EAAiB,CAAA,CAAE,EAC/BsB,EAAsBtB,EAAI,EAAK,EACrC,CAAAc,EAAAC,CAAA,EAAAC,EAAA,IAAMO,EAAA,CAAc,cACpB,eAAeA,GAAgB,CAC7B,GAAI,CAACV,EACH,MAAO,GAGTS,EAAoB,MAAQ,GAExB,GAAA,CACF,MAAME,EAAW,MAAMC,EAAc,CAAE,gBAAiBZ,EAAO,GAAI,EACnEQ,EAAU,MAAQG,CAAA,MACZ,CACNH,EAAU,MAAQ,EAAC,QACnB,CACAC,EAAoB,MAAQ,EAC9B,CACF,CAEA,MAAMI,EAAuB1B,IAC7B,eAAe2B,EAAeC,EAAY,CACxC,GAAI,EAAAF,EAAqB,OAAS,CAAC,QAAQ,gDAAgD,GAI3F,CAAAA,EAAqB,MAAQE,EACzB,GAAA,CACI,MAAAC,GAAgB,CAAE,GAAAD,CAAA,CAAI,EAEtB,MAAAE,EAAMT,EAAU,MAAM,UAAWU,GAAQA,EAAI,KAAOH,CAAE,EAClDP,EAAA,MAAM,OAAOS,EAAK,CAAC,CAAA,QAC7B,CACAJ,EAAqB,MAAQ,IAC/B,EACF,CAEA,KAAM,CAAE,cAAeM,CAAA,EAAeC,EAAYC,EAAoB,CAAA"}