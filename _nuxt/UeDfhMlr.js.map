{"version":3,"file":"UeDfhMlr.js","sources":["../../../../pages/apps/binary-packages/index.vue"],"sourcesContent":["<template>\n  <div>\n    <v-h1>IPA packages</v-h1>\n\n    <v-label\n      v-if=\"scopeOptions.length\"\n      label=\"Scope\"\n      class=\"mb-5\"\n      :class=\"{\n        'pointer-events-none': areIPAsLoading,\n      }\"\n    >\n      <div class=\"flex gap-2\">\n        <v-dropdown\n          v-model=\"scope\"\n          placeholder=\"Choose identifier\"\n          class=\"basis-60\"\n          :options=\"scopeOptions\"\n          show-clear\n        />\n\n        <v-button\n          v-tooltip=\"'Upload IPA package'\"\n          variant=\"primary\"\n          class=\"text-xl\"\n          :to=\"uploadIPALink\"\n          icon=\"tabler:cloud-upload\"\n          @click=\"onUploadIPAButtonClick\"\n        />\n      </div>\n    </v-label>\n\n    <v-table :loading=\"areIPAsLoading\">\n      <template #head>\n        <v-tr>\n          <v-th>App identifier</v-th>\n          <v-th class=\"whitespace-nowrap\">App label</v-th>\n          <v-th>Name</v-th>\n          <v-th>Version</v-th>\n          <v-th>Icon</v-th>\n          <v-th>Status</v-th>\n          <v-th class=\"whitespace-nowrap\">Last status validation issue</v-th>\n          <v-th class=\"whitespace-nowrap\">Is assigned</v-th>\n          <v-th class=\"whitespace-nowrap\">Is in store</v-th>\n          <v-th />\n        </v-tr>\n      </template>\n\n      <template #empty> No IPA packages were found </template>\n\n      <template #body>\n        <v-tr\n          v-for=\"ipa of ipas\"\n          :key=\"ipa.id\"\n        >\n          <v-td class=\"break-words\">{{ ipa.app_identifier }}</v-td>\n          <v-td>{{ ipa.app_label }}</v-td>\n          <v-td>{{ ipa.name }}</v-td>\n          <v-td>{{ ipa.bundle_version }}</v-td>\n          <v-td>\n            <v-image-placeholder\n              v-if=\"ipa.icon_uri\"\n              :src=\"ipa.icon_uri\"\n              class=\"h-9 w-9 rounded-md object-cover object-center\"\n            />\n          </v-td>\n          <v-td class=\"break-words\">\n            <v-spinner\n              v-if=\"!ipa.is_finished\"\n              size=\"1.2em\"\n              class=\"relative top-1 mr-1.5 inline-block\"\n            />\n            <v-html\n              tag=\"span\"\n              :content=\"ipa.status_translated\"\n            />\n          </v-td>\n          <v-td class=\"whitespace-pre-line break-words\">\n            <v-html :content=\"ipa.last_status_validation_issue\" />\n          </v-td>\n          <v-td>{{ ipa.is_assigned ? \"Yes\" : \"No\" }}</v-td>\n          <v-td>{{ ipa.is_in_store ? \"Yes\" : \"No\" }}</v-td>\n          <v-td>\n            <div class=\"flex flex-col gap-1.5 whitespace-nowrap\">\n              <v-button\n                v-if=\"!ipa.is_assigned\"\n                variant=\"primary\"\n                :loading=\"ipaBeingAssigned === ipa.id\"\n                @click=\"assignIPA(ipa.id, ipa.app_identifier)\"\n              >\n                Assign to app\n              </v-button>\n              <v-button\n                v-if=\"!ipa.is_assigned\"\n                :to=\"`/apps/binary-packages/manage/${ipa.id}`\"\n              >\n                Edit metadata\n              </v-button>\n              <v-button\n                v-if=\"!ipa.installations\"\n                variant=\"danger\"\n                :loading=\"ipaBeingDeleted === ipa.id\"\n                @click=\"deleteIPA(ipa.id)\"\n              >\n                Delete\n              </v-button>\n            </div>\n          </v-td>\n        </v-tr>\n      </template>\n    </v-table>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { OfficialIPA } from \"core/types/api\"\n\nconst areIPAsLoading = ref(false)\nconst ipas = ref<OfficialIPA[]>([])\n\nconst apps = await getApps()\nconst scope = ref(\"\")\nconst scopeOptions = apps.map((app) => ({ label: app.label, value: app.identifier }))\nwatch(scope, () => loadIPAs())\nawait loadIPAs()\n\nasync function loadIPAs({ silent }: { silent?: boolean } = {}) {\n  if (areIPAsLoading.value) {\n    return\n  }\n\n  // TODO implement cancelable requests\n  if (!silent) {\n    areIPAsLoading.value = true\n  }\n\n  try {\n    ipas.value = await getOfficialIPAs({ scope: scope.value })\n    const shouldScheduleReload = ipas.value.some((ipa) => !ipa.is_finished)\n    if (shouldScheduleReload) {\n      setTimeout(() => loadIPAs({ silent: true }), 5000)\n    }\n  } catch {\n    ipas.value = []\n  } finally {\n    areIPAsLoading.value = false\n  }\n}\n\nconst { notifySuccess, notifyError } = useNotification()\n\nconst ipaBeingDeleted = ref<null | number>(null)\nasync function deleteIPA(id: number) {\n  if (ipaBeingDeleted.value || !confirm(\"Are you sure you want to delete this IPA package?\")) {\n    return\n  }\n\n  ipaBeingDeleted.value = id\n  try {\n    await deleteOfficialIpa({ id })\n    await loadIPAs()\n    notifySuccess(\"IPA package was deleted\")\n  } finally {\n    ipaBeingDeleted.value = null\n  }\n}\n\nconst ipaBeingAssigned = ref<null | number>(null)\nasync function assignIPA(ipaID: number, appID: string) {\n  if (ipaBeingAssigned.value) {\n    return\n  }\n\n  ipaBeingAssigned.value = ipaID\n  try {\n    await assignIPAToApp({ ipa_id: ipaID, to_app_identifier: appID })\n    await loadIPAs()\n    notifySuccess(\"IPA package was assigned to app\")\n  } finally {\n    ipaBeingAssigned.value = null\n  }\n}\n\nconst uploadIPALink = computed(() => {\n  if (!scope.value) {\n    return undefined\n  }\n\n  return `/apps/binary-packages/upload/${scope.value}`\n})\nfunction onUploadIPAButtonClick() {\n  if (!uploadIPALink.value) {\n    notifyError(\"Please specify scope to upload IPA package\", { id: \"upload_ipa\" })\n  }\n}\n</script>\n"],"names":["areIPAsLoading","ref","ipas","apps","__temp","__restore","_withAsyncContext","getApps","scope","scopeOptions","app","watch","loadIPAs","silent","getOfficialIPAs","ipa","notifySuccess","notifyError","useNotification","ipaBeingDeleted","deleteIPA","id","deleteOfficialIpa","ipaBeingAssigned","assignIPA","ipaID","appID","assignIPAToApp","uploadIPALink","computed","onUploadIPAButtonClick"],"mappings":"ioBAqHM,MAAAA,EAAiBC,EAAI,EAAK,EAC1BC,EAAOD,EAAmB,CAAA,CAAE,EAE5BE,GAAO,CAAAC,EAAAC,CAAA,EAAAC,EAAA,IAAMC,IAAQ,mBACrBC,EAAQP,EAAI,EAAE,EACdQ,EAAeN,EAAK,IAAKO,IAAS,CAAE,MAAOA,EAAI,MAAO,MAAOA,EAAI,UAAA,EAAa,EAC9EC,GAAAH,EAAO,IAAMI,EAAA,CAAU,EACvB,CAAAR,EAAAC,CAAA,EAAAC,EAAA,IAAAM,EAAA,CAAS,cAEf,eAAeA,EAAS,CAAE,OAAAC,CAAO,EAA0B,GAAI,CAC7D,GAAI,CAAAb,EAAe,MAKnB,CAAKa,IACHb,EAAe,MAAQ,IAGrB,GAAA,CACFE,EAAK,MAAQ,MAAMY,GAAgB,CAAE,MAAON,EAAM,MAAO,EAC5BN,EAAK,MAAM,KAAMa,GAAQ,CAACA,EAAI,WAAW,GAEpE,WAAW,IAAMH,EAAS,CAAE,OAAQ,EAAM,CAAA,EAAG,GAAI,CACnD,MACM,CACNV,EAAK,MAAQ,EAAC,QACd,CACAF,EAAe,MAAQ,EACzB,EACF,CAEA,KAAM,CAAE,cAAAgB,EAAe,YAAAC,CAAY,EAAIC,GAAgB,EAEjDC,EAAkBlB,EAAmB,IAAI,EAC/C,eAAemB,EAAUC,EAAY,CACnC,GAAI,EAAAF,EAAgB,OAAS,CAAC,QAAQ,mDAAmD,GAIzF,CAAAA,EAAgB,MAAQE,EACpB,GAAA,CACI,MAAAC,GAAkB,CAAE,GAAAD,CAAA,CAAI,EAC9B,MAAMT,EAAS,EACfI,EAAc,yBAAyB,CAAA,QACvC,CACAG,EAAgB,MAAQ,IAC1B,EACF,CAEM,MAAAI,EAAmBtB,EAAmB,IAAI,EACjC,eAAAuB,EAAUC,EAAeC,EAAe,CACrD,GAAI,CAAAH,EAAiB,MAIrB,CAAAA,EAAiB,MAAQE,EACrB,GAAA,CACF,MAAME,GAAe,CAAE,OAAQF,EAAO,kBAAmBC,EAAO,EAChE,MAAMd,EAAS,EACfI,EAAc,iCAAiC,CAAA,QAC/C,CACAO,EAAiB,MAAQ,IAC3B,EACF,CAEM,MAAAK,EAAgBC,GAAS,IAAM,CAC/B,GAACrB,EAAM,MAIJ,MAAA,gCAAgCA,EAAM,KAAK,EAAA,CACnD,EACD,SAASsB,GAAyB,CAC3BF,EAAc,OACjBX,EAAY,6CAA8C,CAAE,GAAI,YAAc,CAAA,CAElF"}