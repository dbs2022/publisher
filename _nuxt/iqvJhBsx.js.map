{"version":3,"file":"iqvJhBsx.js","sources":["../../../../../../packages/core/components/v-file.vue","../../../../../../packages/core/utils/calculateUploadProgress.ts"],"sourcesContent":["<template>\n  <div\n    class=\"relative flex flex-col items-center justify-center rounded-md border border-dashed border-gray-200 bg-gray-50 p-4 dark:border-gray-400 dark:bg-gray-600\"\n  >\n    <input\n      ref=\"input\"\n      class=\"absolute -inset-px block cursor-pointer opacity-0\"\n      :class=\"{\n        'pointer-events-none': props.loading,\n      }\"\n      type=\"file\"\n      :multiple=\"props.multiple\"\n      :accept=\"props.accept\"\n    />\n\n    <Icon\n      class=\"mb-2 text-4xl transition-all\"\n      :class=\"{\n        'opacity-0': props.loading,\n      }\"\n      name=\"tabler:cloud-upload\"\n    />\n\n    <div\n      class=\"max-w-full transition-all\"\n      :class=\"{\n        'opacity-0': props.loading,\n      }\"\n    >\n      <p\n        v-if=\"props.showFileName && hasModelValue\"\n        class=\"overflow-hidden text-ellipsis whitespace-nowrap text-center\"\n      >\n        {{ modelValueName }}\n      </p>\n      <slot v-else> Choose a file or drag it here </slot>\n    </div>\n\n    <Transition>\n      <div\n        v-if=\"props.loading\"\n        class=\"absolute inset-0 flex flex-col items-center justify-center gap-2 rounded-md\"\n      >\n        <v-spinner\n          size=\"35px\"\n          class=\"dark:border-blue-950\"\n        />\n\n        <span v-if=\"$slots.progress || props.progress !== undefined\">\n          <slot name=\"progress\"> {{ Math.floor(props.progress || 0) }}% </slot>\n        </span>\n      </div>\n    </Transition>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nconst props = defineProps<{\n  multiple?: boolean\n  accept?: string\n  loading?: boolean\n  progress?: number\n  showFileName?: boolean\n}>()\n\nconst modelValue = defineModel<File | File[]>()\nconst hasModelValue = computed(() => {\n  if (Array.isArray(modelValue.value)) {\n    return Boolean(modelValue.value.length)\n  }\n\n  return Boolean(modelValue.value)\n})\nconst modelValueName = computed(() => {\n  if (!hasModelValue.value) {\n    return \"\"\n  }\n\n  if (Array.isArray(modelValue.value)) {\n    return modelValue.value.map((file) => file.name).join(\", \")\n  }\n\n  return modelValue.value?.name as string\n})\n\nconst input = ref<HTMLInputElement>()\n\nwatchEffect(() => {\n  input.value?.addEventListener(\"change\", () => {\n    if (!input.value) {\n      return\n    }\n\n    if (props.multiple) {\n      modelValue.value = input.value.files ? Array.from(input.value.files) : []\n    } else {\n      modelValue.value = input.value.files?.[0]\n    }\n\n    input.value.value = \"\"\n  })\n})\n</script>\n","import type { AxiosProgressEvent } from \"axios\"\n\nexport function calculateUploadProgress(progressEvent: AxiosProgressEvent) {\n  return progressEvent.total ? Math.floor((progressEvent.loaded / progressEvent.total) * 100) : 0\n}\n"],"names":["props","__props","modelValue","_useModel","hasModelValue","computed","modelValueName","file","_a","input","ref","watchEffect","calculateUploadProgress","progressEvent"],"mappings":"mwBAyDA,MAAMA,EAAQC,EAQRC,EAAaC,gBAA2B,EACxCC,EAAgBC,EAAS,IACzB,MAAM,QAAQH,EAAW,KAAK,EACzB,EAAQA,EAAW,MAAM,OAG3B,EAAQA,EAAW,KAC3B,EACKI,EAAiBD,EAAS,IAAM,OAChC,OAACD,EAAc,MAIf,MAAM,QAAQF,EAAW,KAAK,EACzBA,EAAW,MAAM,IAAKK,GAASA,EAAK,IAAI,EAAE,KAAK,IAAI,GAGrDC,EAAAN,EAAW,QAAX,YAAAM,EAAkB,KAPhB,EAOgB,CAC1B,EAEKC,EAAQC,IAEd,OAAAC,EAAY,IAAM,QACVH,EAAAC,EAAA,QAAA,MAAAD,EAAO,iBAAiB,SAAU,IAAM,OACvCC,EAAM,QAIPT,EAAM,SACGE,EAAA,MAAQO,EAAM,MAAM,MAAQ,MAAM,KAAKA,EAAM,MAAM,KAAK,EAAI,CAAA,EAEvEP,EAAW,OAAQM,EAAAC,EAAM,MAAM,QAAZ,YAAAD,EAAoB,GAGzCC,EAAM,MAAM,MAAQ,GAAA,EACrB,CACF,8yBCnGM,SAASG,EAAwBC,EAAmC,CAClE,OAAAA,EAAc,MAAQ,KAAK,MAAOA,EAAc,OAASA,EAAc,MAAS,GAAG,EAAI,CAChG"}